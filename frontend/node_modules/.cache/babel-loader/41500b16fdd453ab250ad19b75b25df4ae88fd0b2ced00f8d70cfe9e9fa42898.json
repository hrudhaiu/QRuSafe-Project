{"ast":null,"code":"var _jsxFileName = \"/Users/hrudhaiumas/Documents/QRuSafe/QRuSafe/frontend/src/App.js\",\n  _s = $RefreshSig$();\n// frontend/src/App.js\n\nimport React, { useState, useRef } from \"react\";\nimport { Html5QrcodeScanner } from \"html5-qrcode\";\nimport axios from \"axios\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [result, setResult] = useState(null);\n  const [scanning, setScanning] = useState(false);\n  const scannerRef = useRef(null);\n  const startScanner = () => {\n    setScanning(true);\n    const config = {\n      fps: 10,\n      qrbox: 250\n    };\n    const verbose = false;\n\n    // Create an instance of Html5QrcodeScanner and render it in the designated div\n    const html5QrcodeScanner = new Html5QrcodeScanner(\"reader\", config, verbose);\n    html5QrcodeScanner.render(onScanSuccess, onScanFailure);\n    scannerRef.current = html5QrcodeScanner;\n  };\n  const onScanSuccess = (decodedText, decodedResult) => {\n    // Stop scanning after a successful scan\n    if (scannerRef.current) {\n      scannerRef.current.clear().catch(error => {\n        console.error(\"Failed to clear scanner. \", error);\n      });\n    }\n    setScanning(false);\n    checkUrlSafety(decodedText);\n  };\n  const onScanFailure = error => {\n    // You can handle scan failures or ignore them.\n    console.warn(`QR Code scan error: ${error}`);\n  };\n  const checkUrlSafety = async url => {\n    try {\n      const response = await axios.post(\"http://localhost:5000/api/check-url\", {\n        url\n      });\n      setResult(response.data);\n    } catch (error) {\n      console.error(\"Error checking URL safety:\", error);\n      setResult({\n        safe: false,\n        details: \"Error occurred while checking URL.\"\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"QR Code Safety Checker\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), scanning ? /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"reader\",\n      style: {\n        width: \"300px\",\n        margin: \"auto\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startScanner,\n      children: \"Start QR Code Scanner\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this), result && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Scan Result:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Status: \", result.safe ? \"Safe\" : \"Potentially Dangerous\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: JSON.stringify(result.details, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"wpU/3yjgMal3ek3/2D1ATBplhhw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","Html5QrcodeScanner","axios","jsxDEV","_jsxDEV","App","_s","result","setResult","scanning","setScanning","scannerRef","startScanner","config","fps","qrbox","verbose","html5QrcodeScanner","render","onScanSuccess","onScanFailure","current","decodedText","decodedResult","clear","catch","error","console","checkUrlSafety","warn","url","response","post","data","safe","details","className","children","fileName","_jsxFileName","lineNumber","columnNumber","id","style","width","margin","onClick","JSON","stringify","_c","$RefreshReg$"],"sources":["/Users/hrudhaiumas/Documents/QRuSafe/QRuSafe/frontend/src/App.js"],"sourcesContent":["// frontend/src/App.js\n\nimport React, { useState, useRef } from \"react\";\nimport { Html5QrcodeScanner } from \"html5-qrcode\";\nimport axios from \"axios\";\nimport \"./App.css\";\n\nfunction App() {\n  const [result, setResult] = useState(null);\n  const [scanning, setScanning] = useState(false);\n  const scannerRef = useRef(null);\n\n  const startScanner = () => {\n    setScanning(true);\n    const config = { fps: 10, qrbox: 250 };\n    const verbose = false;\n\n    // Create an instance of Html5QrcodeScanner and render it in the designated div\n    const html5QrcodeScanner = new Html5QrcodeScanner(\"reader\", config, verbose);\n    \n    html5QrcodeScanner.render(onScanSuccess, onScanFailure);\n    scannerRef.current = html5QrcodeScanner;\n  };\n\n  const onScanSuccess = (decodedText, decodedResult) => {\n    // Stop scanning after a successful scan\n    if (scannerRef.current) {\n      scannerRef.current.clear().catch((error) => {\n        console.error(\"Failed to clear scanner. \", error);\n      });\n    }\n    setScanning(false);\n    checkUrlSafety(decodedText);\n  };\n\n  const onScanFailure = (error) => {\n    // You can handle scan failures or ignore them.\n    console.warn(`QR Code scan error: ${error}`);\n  };\n\n  const checkUrlSafety = async (url) => {\n    try {\n      const response = await axios.post(\"http://localhost:5000/api/check-url\", { url });\n      setResult(response.data);\n    } catch (error) {\n      console.error(\"Error checking URL safety:\", error);\n      setResult({ safe: false, details: \"Error occurred while checking URL.\" });\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>QR Code Safety Checker</h1>\n      {scanning ? (\n        <div id=\"reader\" style={{ width: \"300px\", margin: \"auto\" }}></div>\n      ) : (\n        <button onClick={startScanner}>Start QR Code Scanner</button>\n      )}\n      {result && (\n        <div className=\"result\">\n          <h2>Scan Result:</h2>\n          <p>Status: {result.safe ? \"Safe\" : \"Potentially Dangerous\"}</p>\n          <pre>{JSON.stringify(result.details, null, 2)}</pre>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}